module edu.kit.ipd.sdq.mdsd.qvtrelation2coq.GenerateCoqCode

import org.eclipse.qvtd.xtext.qvtrelation.*
import org.eclipse.ocl.examples.xtext.oclinecore.*
import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.ecore.*

var targetDir = "src-gen"
var modelPath = "model"

Workflow {

    bean = StandaloneSetup { 
    	resourceSetImpl = UmlResourceSet {}
        scanClassPath = true
//		registerEcoreFile = "platform:/resource/edu.kit.ipd.sdq.mdsd.qvtrelation2coq/model/Persons.ecore"
//		registerEcoreFile = "platform:/resource/edu.kit.ipd.sdq.mdsd.qvtrelation2coq/model/FamilyRelations.ecore"
    }

	component = DirectoryCleaner {
		directory = targetDir
	}

	// parse .ecore models
	component = EcoreSupport { }

	component = org.eclipse.xtext.mwe.Reader {
		// lookup all resources on the classpath, or define search scope explicitly 
//		useJavaClassPath = true
		path = modelPath

		// parse .qvtr scripts
		register = QVTrelationStandaloneSetup { }

		loadResource = {
			slot = "model"
		}
	}

/*	// ERROR: Unfortunately, dumping does not work because of some obscure bug: 
	// when storing the complex qvtr model, an exception is thrown. 
	component = Writer {
		modelSlot = "model"
		uri = "${targetDir}/Dump.xmi"
//		multipleResourcesInCaseOfList = true
//		ignoreEmptySlot = true
		skipOnErrors = true
//		useSingleGlobalResourceSet = true
	}*/

	component = CoqGeneratorSupport { }
	component = org.eclipse.xtext.generator.GeneratorComponent {
		register = CoqGeneratorSetup {}
		slot = "model"
		outlet = {
			path = targetDir
		}
	}
}